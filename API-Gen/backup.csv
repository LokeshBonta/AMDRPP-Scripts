imgaug1,image_augmentations,brightness,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,alpha,validate_float_range,0,2,Rpp32f,beta,validate_float_range,0,255,rppHandle_t,rppHandle,/* Computes brightness of an image.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] alpha for brightness calculation and value should be between 0 and 20,*param[in] beta value for brightness calculation and value should be between 0 and 255,param[in] OpenCL handle
imgaug1,image_augmentations,gamma_correction,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,gamma,validate_float_min,0,rppHandle_t,rppHandle,/* Computes gamma correction for an image.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,param[in] gamma value used in gamma correction,param[in] OpenCL handle
imgaug1,image_augmentations,contrast,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,newMin,validate_int_max,newMax,Rpp32u,newMax,validate_int_max,newMax,rppHandle_t,rppHandle,/* Computes contrast of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] minimum pixel value for contrast stretch,*param[in] maxium pixel value for contrast stretch,param[in] OpenCL handle
imgaug1,image_augmentations,exposure,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,exposureValue,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,contrast,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,newMin,validate_int_max,newMax,Rpp32u,newMax,validate_int_max,newMax,rppHandle_t,rppHandle,/* Computes contrast of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] minimum pixel value for contrast stretch,*param[in] maxium pixel value for contrast stretch,param[in] OpenCL handle
imgaug1,image_augmentations,jitter,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,blend,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,alpha,validate_int_max,2.0,rppHandle_t,rppHandle,/* Blends two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,rain,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,rainPercentage,validate_int_max,1.0,Rpp32u,rainWidth,validate_int_max,10,Rpp32u,rainHeight,validate_int_max,20,Rpp32f,transperancy,validate_int_max,1.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,snow,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,snowValue,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,fog,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,fogValue,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,arithmatic_operations,add,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* adds two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,arithmatic_operations,subtract,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Subtracts two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,arithmatic_operations,multiply,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* multiply two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,logical_operations,exclusive_OR,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* XOR two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,logical_operations,inclusive_OR,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Bitwise_OR two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,logical_operations,bitwise_AND,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Bitwise_AND two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,logical_operations,bitwise_NOT,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Bitwise_NOT of the image technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,morphological_transforms,erode,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Erodes the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,morphological_transforms,dilate,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Dilates the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,gamma_correction,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,gamma,validate_float_min,0,rppHandle_t,rppHandle,/* Computes gamma correction for an image.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,param[in] gamma value used in gamma correction,param[in] OpenCL handle
imgaug1,image_augmentations,pixelate,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Computes gamma correction for an image.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,param[in] gamma value used in gamma correction,param[in] OpenCL handle
imgaug1,image_augmentations,fog,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,fogValue,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,snow,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,snowValue,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,jitter,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,2.0,rppHandle_t,rppHandle,/* Modifies the exposure of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,image_augmentations,contrast,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,newMin,validate_int_max,newMax,Rpp32u,newMax,validate_int_max,newMax,rppHandle_t,rppHandle,/* Computes contrast of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] minimum pixel value for contrast stretch,*param[in] maxium pixel value for contrast stretch,param[in] OpenCL handle
imgaug1,filter_operations,gaussian_filter,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,stdDev,validate_int_max,5.0,Rpp32u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Gaussian Blur of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,filter_operations,median_filter,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Median Filter of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,filter_operations,nonlinear_filter,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Median Filter of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,filter_operations,non_max_suppression,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Non maximum supression Filter of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,filter_operations,sobel_filter,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,sobleType,validate_int_max,5,rppHandle_t,rppHandle,/* Median Filter of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,color_model_conversions,vignette,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,stdDev,validate_int_max,10.0,rppHandle_t,rppHandle,/* Median Filter of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,color_model_conversions,vignette,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,stdDev,validate_int_max,10.0,rppHandle_t,rppHandle,/* Vignette Effect of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,color_model_conversions,temperature,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32s,adjustmentValue,validate_int_max,5,rppHandle_t,rppHandle,/* Temperature modifications contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,geometry_transforms,lens_correction,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,strength,validate_int_max,2.0,Rpp32f,zoom,validate_int_max,1.0,rppHandle_t,rppHandle,/* Lens Correction modifications contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,geometry_transforms,fisheye,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Fish eye modifications contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,computer_vision,data_object_copy,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Does deep data object copy of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,color_model_conversions,channel_extract,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32u,extractChannelNumber,validate_int_max,10.0,rppHandle_t,rppHandle,/* Extract the respective channel of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,statistical_operations,min,1,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Min pixel value at the respective location of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,statistical_operations,max,1,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Max pixel value at the respective location of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,arithmatic_operations,absolute_difference,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Absolute Differece of two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,arithmatic_operations,accumulate,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,rppHandle_t,rppHandle,/* Accumulate  two images to one image technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,arithmatic_operations,accumulate_weighted,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,Rpp32f,alpha,validate_int_max,2.0,rppHandle_t,rppHandle,/* Weighted Accumulate  two images to one image technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL 
imgaug1,arithmatic_operations,phase,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Phase difference of two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,arithmatic_operations,magnitude,2,RppPtr_t,srcPtr1,RppPtr_t,srcPtr2,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Magnitude difference of two images technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] exposure value for modification, parm[in] OpenCL handle
imgaug1,computer_vision,local_binary_pattern,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,rppHandle_t,rppHandle,/* Puts local binary pattern in the destination pointer of the image using contrast stretch technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,computer_vision,canny_edge_detector,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp8u,minThreshold,validate_int_max,5,Rpp8u,maxThreshold,validate_int_max,5,rppHandle_t,rppHandle,/* Canny Edge Detector technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in]
imgaug1,computer_vision,gaussian_image_pyramid,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,stdDev,validate_int_max,5.0,Rpp8u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Gaussian Image Pyramid technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
imgaug1,computer_vision,laplacian_image_pyramid,1,RppPtr_t,srcPtr,RppiSize,srcSize,validate_image_size,RppPtr_t,dstPtr,Rpp32f,stdDev,validate_int_max,5.0,Rpp8u,kernelSize,validate_int_max,5,rppHandle_t,rppHandle,/* Laplacian Image Pyramid technique.,param [in] input image,*param[in] dimensions of the image,*param[out] output image,*param[in] 
